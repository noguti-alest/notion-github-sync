name: Commit to Notion

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, closed]

jobs:
  sync-to-notion:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Get commit info
        id: commit_info
        run: |
          # Informa√ß√µes do commit
          AUTHOR="${{ github.event.head_commit.author.name || github.actor }}"
          BRANCH="${{ github.ref_name }}"
          DATE="${{ github.event.head_commit.timestamp || github.event.pull_request.created_at }}"
          MESSAGE="${{ github.event.head_commit.message || github.event.pull_request.title }}"
          LINK="${{ github.event.head_commit.url || github.event.pull_request.html_url }}"
          
          # Determinar tipo e status
          if [ "${{ github.event_name }}" == "push" ]; then
            TIPO="Push"
            STATUS="Push Direto"
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            TIPO="Pull Request"
            if [ "${{ github.event.action }}" == "closed" ] && [ "${{ github.event.pull_request.merged }}" == "true" ]; then
              STATUS="PR Mesclado"
            elif [ "${{ github.event.action }}" == "closed" ]; then
              STATUS="PR Fechado"
            else
              STATUS="PR Aberto"
            fi
          fi
          
          # Branch de destino
          DESTINO="${{ github.event.pull_request.base.ref || github.ref_name }}"
          
          # Atividade (primeira linha da mensagem)
          ATIVIDADE=$(echo "$MESSAGE" | head -n 1)
          
          # Descri√ß√£o (mensagem completa)
          DESCRICAO="$MESSAGE"
          
          # Exportar vari√°veis
          echo "author=$AUTHOR" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT
          echo "atividade=$ATIVIDADE" >> $GITHUB_OUTPUT
          echo "descricao=$DESCRICAO" >> $GITHUB_OUTPUT
          echo "destino=$DESTINO" >> $GITHUB_OUTPUT
          echo "link=$LINK" >> $GITHUB_OUTPUT
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "tipo=$TIPO" >> $GITHUB_OUTPUT
      
      - name: Send to Notion
        uses: actions/github-script@v6
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          AUTHOR: ${{ steps.commit_info.outputs.author }}
          BRANCH: ${{ steps.commit_info.outputs.branch }}
          DATE: ${{ steps.commit_info.outputs.date }}
          ATIVIDADE: ${{ steps.commit_info.outputs.atividade }}
          DESCRICAO: ${{ steps.commit_info.outputs.descricao }}
          DESTINO: ${{ steps.commit_info.outputs.destino }}
          LINK: ${{ steps.commit_info.outputs.link }}
          STATUS: ${{ steps.commit_info.outputs.status }}
          TIPO: ${{ steps.commit_info.outputs.tipo }}
        with:
          script: |
            const https = require('https');
            
            // Validar se as secrets est√£o configuradas
            if (!process.env.NOTION_TOKEN) {
              throw new Error('‚ùå NOTION_TOKEN n√£o configurado nas secrets do GitHub');
            }
            if (!process.env.NOTION_DATABASE_ID) {
              throw new Error('‚ùå NOTION_DATABASE_ID n√£o configurado nas secrets do GitHub');
            }
            
            // Remover h√≠fens do database_id se houver
            const databaseId = process.env.NOTION_DATABASE_ID.replace(/-/g, '');
            
            // Log de debug (sem expor o token completo)
            console.log('üîç Enviando commit para Notion...');
            console.log('üìä Dados do commit:');
            console.log('  - Atividade:', process.env.ATIVIDADE);
            console.log('  - Autor:', process.env.AUTHOR);
            console.log('  - Branch:', process.env.BRANCH);
            console.log('  - Status:', process.env.STATUS);
            console.log('  - Tipo:', process.env.TIPO);
            
            const data = JSON.stringify({
              parent: { database_id: databaseId },
              properties: {
                'Atividade': {
                  title: [{ text: { content: process.env.ATIVIDADE || 'Sem t√≠tulo' } }]
                },
                'Autor': {
                  rich_text: [{ text: { content: process.env.AUTHOR || 'Desconhecido' } }]
                },
                'Branch': {
                  rich_text: [{ text: { content: process.env.BRANCH || '' } }]
                },
                'Data': {
                  date: { start: process.env.DATE }
                },
                'Descri√ß√£o': {
                  rich_text: [{ text: { content: (process.env.DESCRICAO || '').substring(0, 2000) } }]
                },
                'Destino': {
                  rich_text: [{ text: { content: process.env.DESTINO || '' } }]
                },
                'Link': {
                  url: process.env.LINK
                },
                'Status': {
                  status: { name: process.env.STATUS }
                },
                'Tipo': {
                  select: { name: process.env.TIPO }
                }
              }
            });
            
            const options = {
              hostname: 'api.notion.com',
              path: '/v1/pages',
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${process.env.NOTION_TOKEN}`,
                'Content-Type': 'application/json',
                'Notion-Version': '2022-06-28',
                'Content-Length': data.length
              }
            };
            
            return new Promise((resolve, reject) => {
              const req = https.request(options, (res) => {
                let body = '';
                res.on('data', (chunk) => body += chunk);
                res.on('end', () => {
                  if (res.statusCode === 200) {
                    console.log('‚úÖ Commit enviado para Notion com sucesso!');
                    resolve(JSON.parse(body));
                  } else {
                    console.error('‚ùå Erro ao enviar para Notion:', body);
                    reject(new Error(`Status ${res.statusCode}: ${body}`));
                  }
                });
              });
              
              req.on('error', reject);
              req.write(data);
              req.end();
            });
